plugins {
    id 'fabric-loom' version '1.5.8'
    id 'maven-publish'
}

group = 'com.sakalti.sakaplus'
version = '1.0.0'

repositories {
    maven { url = 'https://maven.fabricmc.net' }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:1.19.2"
    mappings "net.fabricmc:yarn:1.19.2+build.28:v2"
    modImplementation "net.fabricmc:fabric-loader:0.14.19"
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.77.0+1.19.2"
    // 難読化が必要な場合のみ下行を有効化
    implementation 'net.sf.proguard:proguard-gradle:7.4.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations.all {
    resolutionStrategy {
        force 'io.netty:netty-transport-native-epoll:4.1.82.Final'
    }
}

jar {
    manifest {
        attributes(
            'Main-Class': 'com.sakalti.sakaplus.SakaplusMod'
        )
    }
}

// ---------- 難読化用タスク -------------
task obfuscate(type: JavaExec) {
    group = "build"
    description = "Obfuscate jar using ProGuard"
    classpath = configurations.runtimeClasspath
    main = 'proguard.gradle.ProGuardTask'
    def jarTask = tasks.named("jar").get()
    args = [
        '@proguard-rules.pro',
        '-injars', "$buildDir/libs/${jarTask.archiveFile.get().asFile.name}",
        '-outjars', "$buildDir/libs/${jarTask.archiveBaseName.get()}-obf.jar"
    ]
    dependsOn jar
}
// --------------------------------------

// 通常ビルド: ./gradlew build → 普通のjarだけ生成
// 難読化ビルド: ./gradlew obfuscate → 普通のjar + 難読化jar両方生成

// buildタスクにobfuscateを依存させない！
// build.dependsOn obfuscate ← これは書かない
